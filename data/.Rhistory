df
colnames(dat19)[-commoncols.idx]
write.csv(colnames(dat19)[-commoncols], file="notincluded.csv")
colnames(dat19)[-commoncols]
commoncols = colnames(df1819)[which(colnames(df1819) %in% colnames(dat17))]
write.csv(colnames(dat19)[commoncols], file="included.csv")
write.csv(colnames(dat19)[-commoncols], file="notincluded.csv")
colnames(dat19)[-commoncols]
commoncols
colnames[!which(commoncols %in% commoncols1819)]
colnames(dat19)[!which(commoncols %in% commoncols1819)]
commoncols
colnames(dat19)[!which(commoncols %in% colnames(dat19))]
colnames(dat19)[!which(colnames(dat19) %in%commoncols )]
which(colnames(dat19) %in%commoncols )
colnames(dat19)[!(colnames(dat19) %in%commoncols )]
colnames(dat19)
colnames(dat19)
commoncols = colnames(dat19)[which(colnames(dat19) %in% colnames(dat18))]
commoncols
gsub("*", "", colnames(dat19))
gsub("*", "", colnames(dat19))
gsub("\\*", "", colnames(dat19))
colnames(dat19) = gsub("\\*", "", colnames(dat19))
dat19
commoncols = colnames(dat19)[which(colnames(dat19) %in% colnames(dat18))]
commoncols
colnames(dat18) = gsub("<strong>", "", colnames(dat18))
colnames(dat18) = gsub("</strong>", "", colnames(dat18))
colnames(dat17) = gsub("<strong>", "", colnames(dat17))
colnames(dat17) = gsub("</strong>", "", colnames(dat17))
commoncols = colnames(dat19)[which(colnames(dat19) %in% colnames(dat18))]
commoncols
commoncols.idx = which(colnames(dat19) %in% colnames(dat18))
n = length(c(unlist(dat18[,1]), unlist(dat19[,1])))
df = data.frame(matrix(ncol = length(commoncols.idx), nrow = n))
for (i in 1:length(commoncols.idx)) {
idx.19 = commoncols.idx[i]
name = colnames(dat19)[idx.19]
idx.18 = which(colnames(dat18) == name)
newcol = c(unlist(dat18[,idx.18]), unlist(dat19[,idx.19]))
df[,i] = numeric(length(newcol))
df[,i] = newcol
}
names(df) = commoncols
df
df1819 = mergeCols(dat19, dat18)
df1819
commoncols = colnames(df1819)[which(colnames(df1819) %in% colnames(dat17))]
commoncols.idx = which(colnames(df1819) %in% colnames(dat17))
n = length(c(unlist(dat17[,1]), unlist(dat1819[,1])))
df = data.frame(matrix(ncol = length(commoncols.idx), nrow = n))
for (i in 1:length(commoncols.idx)) {
idx.19 = commoncols.idx[i]
name = colnames(df1819)[idx.19]
idx.18 = which(colnames(dat17) == name)
newcol = c(unlist(dat17[,idx.18]), unlist(dat1819[,idx.19]))
df[,i] = numeric(length(newcol))
df[,i] = newcol
}
names(df) = commoncols
View(df)
write.csv(df, 'df17_19.csv')
df
View(df)
colnames(df)
colnames(dat16)[!(colnames(dat16) %in%commoncols)]
commoncols
colnames(dat16)
colnames(dat16)
df
colnames(df)
commoncols.19 = colnames(dat19)[which(colnames(dat19) %in% colnames(dat18))]
commoncols.idx = which(colnames(dat19) %in% colnames(dat18))
n = length(c(unlist(dat18[,1]), unlist(dat19[,1])))
df = data.frame(matrix(ncol = length(commoncols.idx), nrow = n))
for (i in 1:length(commoncols.idx)) {
idx.19 = commoncols.idx[i]
name = colnames(dat19)[idx.19]
idx.18 = which(colnames(dat18) == name)
newcol = c(unlist(dat18[,idx.18]), unlist(dat19[,idx.19]))
df[,i] = numeric(length(newcol))
df[,i] = newcol
}
names(df) = commoncols
df
commoncols.full = colnames(dat19)[which(colnames(dat19) %in% colnames(dat18))]
commoncols.idx = which(colnames(dat19) %in% colnames(dat18))
n = length(c(unlist(dat18[,1]), unlist(dat19[,1])))
df = data.frame(matrix(ncol = length(commoncols.idx), nrow = n))
for (i in 1:length(commoncols.idx)) {
idx.19 = commoncols.idx[i]
name = colnames(dat19)[idx.19]
idx.18 = which(colnames(dat18) == name)
newcol = c(unlist(dat18[,idx.18]), unlist(dat19[,idx.19]))
df[,i] = numeric(length(newcol))
df[,i] = newcol
}
names(df) = commoncols
df
commoncols.1819 = colnames(dat19)[which(colnames(dat19) %in% colnames(dat18))]
commoncols.idx.1819 = which(colnames(dat19) %in% colnames(dat18))
n = length(c(unlist(dat18[,1]), unlist(dat19[,1])))
# Clean column names
colnames(dat19) = gsub("\\*", "", colnames(dat19))
colnames(dat18) = gsub("<strong>", "", colnames(dat18))
colnames(dat18) = gsub("</strong>", "", colnames(dat18))
colnames(dat17) = gsub("<strong>", "", colnames(dat17))
colnames(dat17) = gsub("</strong>", "", colnames(dat17))
# Get common columns
commoncols.1819 = colnames(dat19)[which(colnames(dat19) %in% colnames(dat18))]
commoncols.idx.1819 = which(colnames(dat19) %in% colnames(dat18))
n = length(c(unlist(dat18[,1]), unlist(dat19[,1])))
# Create new dataset
df1819 = data.frame(matrix(ncol = length(commoncols.idx.1819), nrow = n))
for (i in 1:length(commoncols.idx.1819)) {
idx.19 = commoncols.idx.1819[i]
name = colnames(dat19)[idx.19]
idx.18 = which(colnames(dat18) == name)
newcol = c(unlist(dat18[,idx.18]), unlist(dat19[,idx.19]))
df1819[,i] = numeric(length(newcol))
df1819[,i] = newcol
}
names(df1819) = commoncols
commoncols.full = colnames(df1819)[which(colnames(df1819) %in% colnames(dat17))]
commoncols.idx.full = which(colnames(df1819) %in% colnames(dat17))
n = length(c(unlist(dat17[,1]), unlist(dat1819[,1])))
df = data.frame(matrix(ncol = length(commoncols.idx.full), nrow = n))
for (i in 1:length(commoncols.idx.full)) {
idx.19 = commoncols.idx.full[i]
name = colnames(df1819)[idx.19]
idx.18 = which(colnames(dat17) == name)
newcol = c(unlist(dat17[,idx.18]), unlist(dat1819[,idx.19]))
df[,i] = numeric(length(newcol))
df[,i] = newcol
}
names(df) = commoncols.full
View(df)
### Merge 17-19
# Get common columns
commoncols.full = colnames(df1819)[which(colnames(df1819) %in% colnames(dat17))]
commoncols.idx.full = which(colnames(df1819) %in% colnames(dat17))
n = length(c(unlist(dat17[,1]), unlist(dat1819[,1])))
# Build
df1719 = data.frame(matrix(ncol = length(commoncols.idx.full), nrow = n))
for (i in 1:length(commoncols.idx.full)) {
idx.19 = commoncols.idx.full[i]
name = colnames(df1819)[idx.19]
idx.18 = which(colnames(dat17) == name)
newcol = c(unlist(dat17[,idx.18]), unlist(dat1819[,idx.19]))
df1719[,i] = numeric(length(newcol))
df1719[,i] = newcol
}
names(df1719) = commoncols.full
View(df1719)
write.csv(df1719, 'df17_19.csv')
library(tidyverse)
library(ggplot2)
squiggly= function(x)sin(5* x)/200
eyes= data.frame(x=c(-1,1), y=0.06)
mouth=data.frame(x=0, y=0.04)
ggplot(mapping=aes(x=c(-10,10)))+
geom_area(stat="function", fun=squiggly,fill="white")+
geom_area(stat = "function", fun=dnorm, fill="white",
args=list(mean=0, sd=4))+
geom_point(data=eyes, aes(x=x,y=y),size=5)+
geom_point(data=mouth, aes(x=x,y=y),size=15)+
labs(title="Happy Normally Distributed Halloween!!")
df1719
df1719$`What is your race?`
hist(df1719$`What is your race?`()
hist(df1719$`What is your race?`)
hist(df1719$`What is your race?`)
hist(as.factor(df1719$`What is your race?`))
df1719$`What is your race?`
barplot(as.factor(df1719$`What is your race?`))
as.factor(df1719$`What is your race?`)
hist(table(as.factor(df1719$`What is your race?`)))
barplot(table(as.factor(df1719$`What is your race?`)))
table(as.factor(df1719$`What is your race?`))
df1719
table(as.factor(df1719$what `What US state or territory do you live in?`))
table(as.factor(df1719$what `What US state or territory do you live in?`))
table(as.factor(df1719$`What US state or territory do you live in?`))
View(df1719)
# dat14 = readAndAddYear(2014)
dat16 = readAndAddYear(2016)
dat17 = readAndAddYear(2017)
dat18 = readAndAddYear(2018)
dat19 = readAndAddYear(2019)
# Clean column names
colnames(dat19) = gsub("\\*", "", colnames(dat19))
colnames(dat18) = gsub("<strong>", "", colnames(dat18))
colnames(dat18) = gsub("</strong>", "", colnames(dat18))
colnames(dat17) = gsub("<strong>", "", colnames(dat17))
colnames(dat17) = gsub("</strong>", "", colnames(dat17))
# Get common columns
commoncols.1819 = colnames(dat19)[which(colnames(dat19) %in% colnames(dat18))]
commoncols.idx.1819 = which(colnames(dat19) %in% colnames(dat18))
n = length(c(unlist(dat18[,1]), unlist(dat19[,1])))
# Create new dataset
df1819 = data.frame(matrix(ncol = length(commoncols.idx.1819), nrow = n))
for (i in 1:length(commoncols.idx.1819)) {
idx.19 = commoncols.idx.1819[i]
name = colnames(dat19)[idx.19]
idx.18 = which(colnames(dat18) == name)
newcol = c(unlist(dat18[,idx.18]), unlist(dat19[,idx.19]))
df1819[,i] = numeric(length(newcol))
df1819[,i] = newcol
}
names(df1819) = commoncols
df1819
View(df1819)
### Merge 17-19
# Get common columns
commoncols.full = colnames(df1819)[which(colnames(df1819) %in% colnames(dat17))]
commoncols.idx.full = which(colnames(df1819) %in% colnames(dat17))
n = length(c(unlist(dat17[,1]), unlist(dat1819[,1])))
# Build New dataset
df1719 = data.frame(matrix(ncol = length(commoncols.idx.full), nrow = n))
df1719
for (i in 1:length(commoncols.idx.full)) {
idx.19 = commoncols.idx.full[i]
name = colnames(df1819)[idx.19]
idx.17 = which(colnames(dat17) == name)
newcol = c(unlist(dat17[,idx.17]), unlist(dat1819[,idx.19]))
df1719[,i] = numeric(length(newcol))
df1719[,i] = newcol
}
names(df1719) = commoncols.full
View(df1719)
# Clean column names
colnames(dat19) = gsub("\\*", "", colnames(dat19))
colnames(dat18) = gsub("<strong>", "", colnames(dat18))
colnames(dat18) = gsub("</strong>", "", colnames(dat18))
colnames(dat17) = gsub("<strong>", "", colnames(dat17))
colnames(dat17) = gsub("</strong>", "", colnames(dat17))
# Get common columns
commoncols.1819 = colnames(dat19)[which(colnames(dat19) %in% colnames(dat18))]
commoncols.idx.1819 = which(colnames(dat19) %in% colnames(dat18))
commoncols.idx.1819
for (i in 1:length(commoncols.idx.1819)) {
idx.19 = commoncols.idx.1819[i]
name = colnames(dat19)[idx.19]
print(name)
idx.18 = which(colnames(dat18) == name)
newcol = c(unlist(dat18[,idx.18]), unlist(dat19[,idx.19]))
df1819[,i] = numeric(length(newcol))
df1819[,i] = newcol
}
# Create new dataset
df1819 = data.frame(matrix(ncol = length(commoncols.idx.1819), nrow = n))
for (i in 1:length(commoncols.idx.1819)) {
idx.19 = commoncols.idx.1819[i]
name = colnames(dat19)[idx.19]
print(name)
idx.18 = which(colnames(dat18) == name)
newcol = c(unlist(dat18[,idx.18]), unlist(dat19[,idx.19]))
print(head(newcol))
df1819[,i] = numeric(length(newcol))
df1819[,i] = newcol
}
# Create new dataset
df1819 = data.frame(matrix(ncol = length(commoncols.idx.1819), nrow = n))
for (i in 1:length(commoncols.idx.1819)) {
idx.19 = commoncols.idx.1819[i]
name = colnames(dat19)[idx.19]
print(name)
idx.18 = which(colnames(dat18) == name)
newcol = c(unlist(dat18[,idx.18]), unlist(dat19[,idx.19]))
print(head(newcol))
df1819[,i] = numeric(length(newcol))
df1819[,i] = newcol
}
for (i in 1:length(commoncols.idx.1819)) {
idx.19 = commoncols.idx.1819[i]
name = colnames(dat19)[idx.19]
print(name)
idx.18 = which(colnames(dat18) == name)
newcol = c(unlist(dat18[,idx.18]), unlist(dat19[,idx.19]))
print(head(newcol))
df1819[,i] = numeric(length(newcol))
df1819[,i] = newcol
}
# Clean column names
colnames(dat19) = gsub("\\*", "", colnames(dat19))
colnames(dat18) = gsub("<strong>", "", colnames(dat18))
colnames(dat18) = gsub("</strong>", "", colnames(dat18))
colnames(dat17) = gsub("<strong>", "", colnames(dat17))
colnames(dat17) = gsub("</strong>", "", colnames(dat17))
# Get common columns
commoncols.1819 = colnames(dat19)[which(colnames(dat19) %in% colnames(dat18))]
commoncols.idx.1819 = which(colnames(dat19) %in% colnames(dat18))
n = length(c(unlist(dat18[,1]), unlist(dat19[,1])))
# Create new dataset
df1819 = data.frame(matrix(ncol = length(commoncols.idx.1819), nrow = n))
for (i in 1:length(commoncols.idx.1819)) {
idx.19 = commoncols.idx.1819[i]
name = colnames(dat19)[idx.19]
print(name)
idx.18 = which(colnames(dat18) == name)
newcol = c(unlist(dat18[,idx.18]), unlist(dat19[,idx.19]))
print(head(newcol))
df1819[,i] = numeric(length(newcol))
df1819[,i] = newcol
}
colnames(dat19)[which(colnames(dat19) %in% colnames(dat18))]
# Get common columns
commoncols.1819 = colnames(dat19)[which(colnames(dat19) %in% colnames(dat18))]
commoncols.idx.1819 = which(colnames(dat19) %in% colnames(dat18))
n = length(c(unlist(dat18[,1]), unlist(dat19[,1])))
# Create new dataset
df1819 = data.frame(matrix(ncol = length(commoncols.idx.1819), nrow = n))
# Create new dataset
df1819 = data.frame(matrix(ncol = length(commoncols.idx.1819), nrow = n))
for (i in 1:length(commoncols.idx.1819)) {
idx.19 = commoncols.idx.1819[i]
name = colnames(dat19)[idx.19]
idx.18 = which(colnames(dat18) == name)
newcol = c(unlist(dat18[,idx.18]), unlist(dat19[,idx.19]))
print(head(newcol))
df1819[,i] = numeric(length(newcol))
df1819[,i] = newcol
}
names(df1819) = commoncols
# Create new dataset
df1819 = data.frame(matrix(ncol = length(commoncols.idx.1819), nrow = n))
for (i in 1:length(commoncols.idx.1819)) {
idx.19 = commoncols.idx.1819[i]
name = colnames(dat19)[idx.19]
idx.18 = which(colnames(dat18) == name)
newcol = c(unlist(dat18[,idx.18]), unlist(dat19[,idx.19]))
df1819[,i] = numeric(length(newcol))
df1819[,i] = newcol
}
names(df1819) = commoncols
length(commoncols.idx.1819)
colnames(dat19)
which(colnames(dat19) %in% colnames(dat18))
commoncols.idx.1819
which(colnames(dat19) %in% colnames(dat18))
commoncols.idx.1819 = which(colnames(dat19) %in% colnames(dat18))
commoncols.idx.1819
# dat14 = readAndAddYear(2014)
dat16 = readAndAddYear(2016)
dat17 = readAndAddYear(2017)
dat18 = readAndAddYear(2018)
dat19 = readAndAddYear(2019)
# Clean column names
colnames(dat19) = gsub("\\*", "", colnames(dat19))
colnames(dat18) = gsub("<strong>", "", colnames(dat18))
colnames(dat18) = gsub("</strong>", "", colnames(dat18))
colnames(dat17) = gsub("<strong>", "", colnames(dat17))
colnames(dat17) = gsub("</strong>", "", colnames(dat17))
# Get common columns
commoncols.1819 = colnames(dat19)[which(colnames(dat19) %in% colnames(dat18))]
commoncols.1819
commoncols.idx.1819 = which(colnames(dat19) %in% colnames(dat18))
n = length(c(unlist(dat18[,1]), unlist(dat19[,1])))
# Create new dataset
df1819 = data.frame(matrix(ncol = length(commoncols.idx.1819), nrow = n))
for (i in 1:length(commoncols.idx.1819)) {
idx.19 = commoncols.idx.1819[i]
name = colnames(dat19)[idx.19]
idx.18 = which(colnames(dat18) == name)
newcol = c(unlist(dat18[,idx.18]), unlist(dat19[,idx.19]))
df1819[,i] = numeric(length(newcol))
df1819[,i] = newcol
}
names(df1819) = commoncols
colnames(dat19)
# Clean column names
colnames(dat19) = gsub("\\*", "", colnames(dat19))
colnames(dat19)
# Get common columns
commoncols.1819 = colnames(dat19)[which(colnames(dat19) %in% colnames(dat18))]
commoncols.1819
commoncols.idx.1819 = which(colnames(dat19) %in% colnames(dat18))
which(colnames(dat19) %in% colnames(dat18))
commoncols.idx.1819[i]
colnames(dat19)[idx.19]
which(colnames(dat18) == name)
dat18[,idx.18]
unlist(dat19[,idx.19])
i = 74
idx.19 = commoncols.idx.1819[i]
idx.19
name = colnames(dat19)[idx.19]
colnames(dat19)[idx.19]
length(commoncols.idx.1819)
# Create new dataset
df1819 = data.frame(matrix(ncol = length(commoncols.idx.1819), nrow = n))
for (i in 1:length(commoncols.idx.1819)) {
idx.19 = commoncols.idx.1819[i]
name = colnames(dat19)[idx.19]
idx.18 = which(colnames(dat18) == name)
newcol = c(unlist(dat18[,idx.18]), unlist(dat19[,idx.19]))
df1819[,i] = numeric(length(newcol))
df1819[,i] = newcol
}
# dat14 = readAndAddYear(2014)
dat16 = readAndAddYear(2016)
dat17 = readAndAddYear(2017)
dat18 = readAndAddYear(2018)
dat19 = readAndAddYear(2019)
# Clean column names
colnames(dat19) = gsub("\\*", "", colnames(dat19))
colnames(dat18) = gsub("<strong>", "", colnames(dat18))
colnames(dat18) = gsub("</strong>", "", colnames(dat18))
colnames(dat17) = gsub("<strong>", "", colnames(dat17))
colnames(dat17) = gsub("</strong>", "", colnames(dat17))
# Get common columns
commoncols.1819 = colnames(dat19)[which(colnames(dat19) %in% colnames(dat18))]
commoncols.idx.1819 = which(colnames(dat19) %in% colnames(dat18))
n = length(c(unlist(dat18[,1]), unlist(dat19[,1])))
# Create new dataset
df1819 = data.frame(matrix(ncol = length(commoncols.idx.1819), nrow = n))
for (i in 1:length(commoncols.idx.1819)) {
idx.19 = commoncols.idx.1819[i]
name = colnames(dat19)[idx.19]
idx.18 = which(colnames(dat18) == name)
newcol = c(unlist(dat18[,idx.18]), unlist(dat19[,idx.19]))
df1819[,i] = numeric(length(newcol))
df1819[,i] = newcol
}
names(df1819) = commoncols.1819
### Merge 17-19
# Get common columns
commoncols.full = colnames(df1819)[which(colnames(df1819) %in% colnames(dat17))]
commoncols.idx.full = which(colnames(df1819) %in% colnames(dat17))
n = length(c(unlist(dat17[,1]), unlist(dat1819[,1])))
# Build New dataset
df1719 = data.frame(matrix(ncol = length(commoncols.idx.full), nrow = n))
for (i in 1:length(commoncols.idx.full)) {
idx.19 = commoncols.idx.full[i]
name = colnames(df1819)[idx.19]
idx.17 = which(colnames(dat17) == name)
newcol = c(unlist(dat17[,idx.17]), unlist(dat1819[,idx.19]))
df1719[,i] = numeric(length(newcol))
df1719[,i] = newcol
}
names(df1719) = commoncols.full
View(df1719)
table(as.factor(df1719$`What US state or territory do you live in?`))
table(as.factor(df1719$`What US state or territory do you live in?`))
### Merge 17-19
# Get common columns
commoncols.full = colnames(df1819)[which(colnames(df1819) %in% colnames(dat17))]
commoncols.idx.full = which(colnames(df1819) %in% colnames(dat17))
n = length(c(unlist(dat17[,1]), unlist(dat1819[,1])))
# Build New dataset
df1719 = data.frame(matrix(ncol = length(commoncols.idx.full), nrow = n))
for (i in 1:length(commoncols.idx.full)) {
idx.19 = commoncols.idx.full[i]
name = colnames(df1819)[idx.19]
idx.17 = which(colnames(dat17) == name)
newcol = c(unlist(dat17[,idx.17]), unlist(dat1819[,idx.19]))
df1719[,i] = numeric(length(newcol))
df1719[,i] = newcol
}
names(df1719) = commoncols.full
View(df1719)
which(colnames(df1819)
which(colnames(df1819)
colnames(df1819)
which(colnames(df1819) %in% colnames(dat17))
which(colnames(df1819) %in% colnames(dat17))
which(colnames(df1819) %in% colnames(dat17))
which(colnames(df1819) %in% colnames(dat17))
which(colnames(df1819) %in% colnames(dat17))
### Merge 17-19
# Get common columns
commoncols.full = colnames(df1819)[which(colnames(df1819) %in% colnames(dat17))]
commoncols.idx.full = which(colnames(df1819) %in% colnames(dat17))
n = length(c(unlist(dat17[,1]), unlist(dat1819[,1])))
n
# Build New dataset
df1719 = data.frame(matrix(ncol = length(commoncols.idx.full), nrow = n))
1:length(commoncols.idx.full)
commoncols.full
colnames(df1819)[idx.19]
colnames(dat17)
which(colnames(dat17) == name)
newcol = c(unlist(dat17[,idx.17]), unlist(dat1819[,idx.19]))
newcol
dat1819[,idx.19]
idx.19
dat1819
### Merge 17-19
# Get common columns
commoncols.full = colnames(df1819)[which(colnames(df1819) %in% colnames(dat17))]
commoncols.idx.full = which(colnames(df1819) %in% colnames(dat17))
n = length(c(unlist(dat17[,1]), unlist(dat1819[,1])))
# Build New dataset
df1719 = data.frame(matrix(ncol = length(commoncols.idx.full), nrow = n))
for (i in 1:length(commoncols.idx.full)) {
idx.19 = commoncols.idx.full[i]
name = colnames(df1819)[idx.19]
idx.17 = which(colnames(dat17) == name)
newcol = c(unlist(dat17[,idx.17]), unlist(df1819[,idx.19]))
df1719[,i] = numeric(length(newcol))
df1719[,i] = newcol
}
names(df1719) = commoncols.full
View(df1719)
df1719
View(df1719)
table(as.factor(df1719$`What US state or territory do you live in?`))
barchart(table(as.factor(df1719$`What US state or territory do you live in?`)))
barplot(table(as.factor(df1719$`What US state or territory do you live in?`)))
# Df 17-19 write
write.csv(df1719, 'df17_19.csv')
